import{a as n,E as r,d as o}from"./vendor-DnuICktx.js";import{p as c}from"./index-CCp06Q.js";const a=e=>{switch(e){case 200:return"请求成功";case 400:return"请求错误，服务器未进行新建或修改数据的操作";case 401:return"用户没有权限（令牌、用户名、密码错误）";case 403:return"用户得到授权，但是访问是被禁止的";case 404:return"网络请求错误，未找到该资源";case 500:return"服务器发生错误，请检查服务器";case 501:return"网络未实现";case 502:return"网络错误";case 503:return"服务不可用，服务器暂时过载或维护";case 504:return"网络超时";default:return`连接错误${e}`}},t=n.create({baseURL:void 0,timeout:15e3});t.interceptors.request.use(e=>e,e=>Promise.reject(e));t.interceptors.response.use(e=>{if(e.status==200){let s=e.data;return s.code!=0?(r({message:s.message,type:"error"}),Promise.reject(s)):s}return r({message:a(e.status),type:"error"}),e},e=>{const{response:s}=e;if(s)return r({message:a(s.status),type:"error"}),Promise.reject(s.data);r({message:"网络连接异常，请稍后再试！",type:"error"})});const u=async e=>t("/login",e),i=async e=>t("/getUserInfo",e),m=o("userInfo",{state:()=>({username:"lxf",accessToken:"",roles:["common"]}),getters:{},actions:{storeUserLogin(e){return u(e).then(s=>(this.username=s.data.username,this.roles=s.data.roles,this.accessToken=s.data.accessToken,s))},storeRefreshUserInfo(){this.username=="lxf"&&this.accessToken!=""&&i({accessToken:this.accessToken}).then(e=>{this.username=e.username,this.roles=e.roles,this.accessToken=e.accessToken}).catch(()=>{this.accessToken=""})}},persist:{key:"userInfo",storage:sessionStorage,paths:["accessToken"]}});function g(){return m(c)}export{m as a,g as u};
